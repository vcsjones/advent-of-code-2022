IDENTIFICATION DIVISION. *> Compile and run with cobc -std=cobol2014 --free -x day3.cbl && ./day3
PROGRAM-ID. DAY3.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT DAY3DATA ASSIGN TO INPUT
    ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
FD DAY3DATA.
    01 RUCKSACK.
        05 CONTENTS PIC X(128).

WORKING-STORAGE SECTION.
77 WS-EOF PIC A(1).
77 WS-CONTENT-POS PIC 9(3).
77 WS-CONTENT-CHAR PIC X(1).
77 WS-LEFT-HALF PIC X(64).
77 WS-RIGHT-HALF PIC X(64).
77 WS-COMMON PIC X(1).
77 WS-PART1-SUM PIC 9(9).
77 WS-PART2-SUM PIC 9(9).
77 WS-LINE-NUM PIC 9(3).
77 WS-TO-COUNT PIC X(128).
01 WS-RUCKSACK.
    05 WS-CONTENTS PIC X(128).
01 WS-LINE-GROUP.
   05 WS-LINE PIC X(128) OCCURS 3 TIMES.
01 WS-COUNTERS.
    05 WS-COUNTER PIC 9(3) OCCURS 3 TIMES.
01 WS-POSITIONS.
    05 WS-POS PIC 9(3) OCCURS 3 TIMES.


PROCEDURE DIVISION.
MAIN-PARA.
    MOVE 1 TO WS-LINE-NUM
    OPEN INPUT DAY3DATA.
        PERFORM UNTIL WS-EOF='Y'
            READ DAY3DATA INTO WS-RUCKSACK
                AT END MOVE 'Y' TO WS-EOF
                NOT AT END

                MOVE WS-CONTENTS TO WS-LINE(WS-LINE-NUM)

                IF (WS-LINE-NUM = 3)
                    PERFORM INTERSECT-LINES-PARA

                    EVALUATE WS-COMMON
                        WHEN 'A' THRU 'Z'
                            COMPUTE WS-PART2-SUM = WS-PART2-SUM + (FUNCTION ORD(WS-COMMON) - FUNCTION ORD('A') + 1 + 26)
                        WHEN 'a' THRU 'z'
                            COMPUTE WS-PART2-SUM = WS-PART2-SUM + (FUNCTION ORD(WS-COMMON) - FUNCTION ORD('a') + 1)
                    END-EVALUATE
                END-IF

                MOVE WS-CONTENTS TO WS-TO-COUNT
                PERFORM COUNT-LEN-PARA
                MOVE WS-CONTENTS(1:WS-CONTENT-POS / 2) TO WS-LEFT-HALF
                MOVE WS-CONTENTS((WS-CONTENT-POS + 2) / 2:) TO WS-RIGHT-HALF
                PERFORM INTERSECT-PARA
                EVALUATE WS-COMMON
                    WHEN 'A' THRU 'Z'
                        COMPUTE WS-PART1-SUM = WS-PART1-SUM + (FUNCTION ORD(WS-COMMON) - FUNCTION ORD('A') + 1 + 26)
                    WHEN 'a' THRU 'z'
                        COMPUTE WS-PART1-SUM = WS-PART1-SUM + (FUNCTION ORD(WS-COMMON) - FUNCTION ORD('a') + 1)
                END-EVALUATE
            END-READ

            IF (WS-LINE-NUM < 3)
                ADD 1 TO WS-LINE-NUM
            ELSE
                MOVE 1 TO WS-LINE-NUM
            END-IF
        END-PERFORM.
    CLOSE DAY3DATA.

    DISPLAY 'PART 1: ' WS-PART1-SUM
    DISPLAY 'PART 2: ' WS-PART2-SUM
    STOP RUN.
COUNT-LEN-PARA.
    MOVE 1 TO WS-CONTENT-POS
    PERFORM WITH TEST AFTER UNTIL WS-CONTENT-CHAR = SPACE
        MOVE WS-TO-COUNT(WS-CONTENT-POS:1) TO WS-CONTENT-CHAR
        ADD 1 TO WS-CONTENT-POS
    END-PERFORM
    SUBTRACT 2 FROM WS-CONTENT-POS.
INTERSECT-PARA.
    MOVE 1 TO WS-COUNTER(1)
    MOVE 1 TO WS-COUNTER(2)
    MOVE SPACE TO WS-COMMON
    PERFORM UNTIL WS-COMMON <> SPACE
        IF (WS-LEFT-HALF(WS-COUNTER(1):1) = WS-RIGHT-HALF(WS-COUNTER(2):1))
            MOVE WS-LEFT-HALF(WS-COUNTER(1):1) TO WS-COMMON
        END-IF

        IF (WS-COUNTER(1) < WS-CONTENT-POS / 2)
            ADD 1 TO WS-COUNTER(1)
        ELSE
            MOVE 1 TO WS-COUNTER(1)
            ADD 1 TO WS-COUNTER(2)
        END-IF
    END-PERFORM.
INTERSECT-LINES-PARA.
    MOVE 001001001 TO WS-POSITIONS
    MOVE SPACE TO WS-COMMON
    MOVE WS-LINE(1) TO WS-TO-COUNT
    PERFORM COUNT-LEN-PARA
    MOVE WS-CONTENT-POS TO WS-COUNTER(1)
    MOVE WS-LINE(2) TO WS-TO-COUNT
    PERFORM COUNT-LEN-PARA
    MOVE WS-CONTENT-POS TO WS-COUNTER(2)
    MOVE WS-LINE(3) TO WS-TO-COUNT
    PERFORM COUNT-LEN-PARA
    MOVE WS-CONTENT-POS TO WS-COUNTER(3)

    PERFORM UNTIL WS-POS(1) > WS-COUNTER(1) OR WS-COMMON <> SPACE
        PERFORM UNTIL WS-POS(2) > WS-COUNTER(2) OR WS-COMMON <> SPACE
            PERFORM UNTIL WS-POS(3) > WS-COUNTER(3) OR WS-COMMON <> SPACE
                IF (WS-LINE(1)(WS-POS(1):1) = WS-LINE(2)(WS-POS(2):1))
                    IF (WS-LINE(2)(WS-POS(2):1) = WS-LINE(3)(WS-POS(3):1))
                        MOVE WS-LINE(2)(WS-POS(2):1) TO WS-COMMON
                    END-IF
                END-IF

                ADD 1 TO WS-POS(3)
            END-PERFORM

            MOVE 1 TO WS-POS(3)
            ADD 1 TO WS-POS(2)
        END-PERFORM

        MOVE 1 TO WS-POS(3)
        MOVE 1 TO WS-POS(2)
        ADD 1 TO WS-POS(1)
    END-PERFORM.
